#include <iostream>
using namespace std;

class Fecha{
    int agno;
    int mes;
    int dia;
    int hora;
    public:
    void setData(int anno,int mese,int day,int ora){
        agno=anno;mes=mese;dia=day;hora=ora;}
    int getAgno(){return(agno);}
    int getMes(){return(mes);}
    int getDia(){return(dia);}
    int getHora(){return(hora);}
    void verifecha(int agno,int mes,int dia,int hora){
        if (mes>12 || mes<1 || dia<=0 || dia >31 || hora <0 || hora >24){
            cout<<"La fecha no es valida";
        }
        if(dia==31){
            if (mes==4 || mes==6 || mes==9 || mes==11 || mes==2){
                cout<<"La fecha no es valida";
            }
        }
        if (dia==30 && mes==2){cout<<"La fecha no es valida";}
        if(dia==29 && (agno%4!=0 && agno%400!=0)){
            cout<<"La fecha no es valida";
        }
    }
    friend class Cita;
};
class Cita{
  string nombre1;
  string nombre2;
  string lugar;
  Fecha objetodata;
  friend class ClaseExterna;
};
class ClaseExterna{
    Cita temporal;
    Cita Listado[10];
    int contador=0;
    public:
    void crearCita(string nome1,string nome2,string lugo,Fecha objetofecha){
        temporal.nombre1=nome1;
        temporal.nombre2=nome2;
        temporal.lugar=lugo;
        temporal.objetodata=objetofecha;
        if (contador>10){
            cout<<"Numero maximo de citas alcanzado";
        }
        Listado[contador]=temporal;
        contador=contador+1;
    }
    string getNombre1(){return(temporal.nombre1);}
    string getNombre2(){return(temporal.nombre2);}
    string getLugar(){return(temporal.lugar);}
    int getAgno(){return()}
    friend void consultarCitas();
    
};
void consultarCitas(){
    ClaseExterna tes;
    tes.getAgno();
    
}
int main()
{
    Fecha prueb;
    prueb.setData(2018,8,2,7);
    ClaseExterna prueba;
    prueba.crearCita("uno","dos","parque",prueb);
    prueb.verifecha(2012,2,29,24);
    consultarCitas();

    return 0;
}
